const iconv = require('iconv-lite')
const req = require('./req')
let page = module.exports = {}

page.create = (pageName, htmlName, content, site, catalog) => {
  let url = 'http://wizard2.webdev.com/cgi-bin/edit/save_over'
  let data = {
    id: '',
    content: iconv.encode(content, 'GBK'),
    site: site,
    name: iconv.encode(pageName, 'GBK'),
    file: htmlName,
    catalog: catalog,
    async: 1,
    jump: 1,
    root: 'main'
  }

  return new Promise((resolve, reject) => {
    req.post(url, data)
      .then((res) => {
        let ret = {
          code: 0,
          msg: '执行成功',
          data: null
        }
        if (res.code === 0) {
          let html = res.data.html

          if (html.indexOf('save_over.cpp') > -1) {
            ret['code'] = 101
            ret['msg'] = '页面名重复'
          } else {
            let regExp = /id=(.*)&c/i
            let arr = regExp.exec(html)
            let id = arr[1]

            ret['data'] = {}
            ret['data']['id'] = id
            ret['data']['name'] = pageName
            ret['data']['file'] = htmlName
          }
        } else {
          ret['code'] = res['code']
          ret['msg'] = '创建页面失败'
        }

        resolve(ret)
      }, (err) => {
        reject(err)
      })
  })
}

page.update = (id, content, site, catalog) => {
  let url = 'http://wizard2.webdev.com/cgi-bin/edit/save_as?type=save'
  let data = {
    id: id,
    content: iconv.encode(content, 'GBK'),
    site: site,
    catalog: catalog,
    async: 1,
    jump: 1,
    root: 'main'
  }

  return new Promise((resolve, reject) => {
    req.post(url, data)
      .then((res) => {
        let ret = {
          code: 0,
          msg: '执行成功',
          data: null
        }

        if (res.code === 0) {
          let html = res.data.html

          if (html.indexOf('opener.parent') > -1) {
            ret['code'] = 0
            ret['msg'] = '更新成功'
          } else {
            ret['code'] = 102
            ret['msg'] = '更新失败'
          }
        } else {
          ret['code'] = res.code
          ret['msg'] = res.msg
        }

        resolve(ret)
      }, (err) => {
        reject(err)
      })
  })
}

page.sync = (id, site, catalog) => {
  let url = 'http://wizard2.webdev.com/cgi-bin/edit/leaf_editor?id=' + id + '&site=' + site + '&catalog=' + catalog

  return new Promise((resolve, reject) => {
    req.get(url)
      .then((res) => {
        let ret = {
          code: 0,
          msg: '执行成功',
          data: null
        }

        if (res.code === 0) {
          let html = res.data.html

          // 获取当前页面是否存在
          let existsRegExp = /<b.*>(.*)<\/b>/ig
          let exists = existsRegExp.exec(html)

          if (exists[1].length > '当前页面： ()'.length) {
            let regExp = /<textarea.*>([\s\S]*)<\/textarea>/ig
            let arr = regExp.exec(html)
            let content = unescape(arr[1])

            ret['code'] = 0
            ret['msg'] = '同步模板成功'
            ret['data'] = {}
            ret['data']['id'] = id
            ret['data']['content'] = content
          } else {
            ret['code'] = 103
            ret['msg'] = '模板不存在'
          }
        } else {
          ret['code'] = 103
          ret['msg'] = '同步模板失败'
        }

        resolve(ret)
      }, (err) => {
        reject(err)
      })
  })
}
