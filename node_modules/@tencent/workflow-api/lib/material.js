const fs = require('fs')
const path = require('path')
const mime = require('mime')
const req = require('./req')
let material = module.exports = {}

material.add = (file, target) => {
  return new Promise((resolve, reject) => {
    let ret = {
      code: 0,
      msg: '文件上传成功'
    }

    if (!fs.existsSync(file)) {
      ret['code'] = 404
      ret['msg'] = file + ' does not exist'

      resolve(ret)

      return
    }

    let filename = path.basename(file)
    let url = 'http://wizard2.webdev.com/cgi-bin/material/material_add'
    let data = {
      newname: '',
      overwrite: 0,
      addmat: 1,
      watermark: 0,
      defaultwater: 0,
      url: 'http://wizard2.webdev.com/cgi-bin/material/material_list?dir=' + target,
      path: target,
      upfile: {
        value: fs.createReadStream(file),
        options: {
          filename: filename,
          contentType: mime.lookup(file)
        }
      }
    }

    req.post(url, data)
      .then((res) => {
        if (res.code === 0) {
          let html = res.data.html
          if (html.indexOf('displaySucc') > -1) {
            let regExp = /<a.*>(.*)<\/a>/ig

            let ret = regExp.exec(html)
            resolve({
              code: 0,
              msg: '上传成功',
              data: {
                url: ret[1]
              }
            })
          } else {
            resolve({
              code: 401,
              msg: '上传失败，请重新上传'
            })
          }
        } else {
          resolve({
            code: 401,
            msg: '上传失败，请重新上传'
          })
        }
      }, (err) => {
        reject(new Error(err))
      })
  })
}
